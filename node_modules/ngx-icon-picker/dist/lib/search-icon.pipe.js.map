{"version":3,"file":"search-icon.pipe.js","sourceRoot":"","sources":["../../src/lib/search-icon.pipe.ts"],"names":[],"mappings":";;;;;;;;AAAA,sCAAoD;AAOpD;IAAA;IA8BA,CAAC;IA5BC,kCAAS,GAAT,UAAU,KAAa,EAAE,MAAc;QAAvC,iBAuBC;QAtBC,IAAI,CAAC,MAAM,EAAE;YACX,OAAO,KAAK,CAAC;SACd;QAED,IAAM,WAAW,GAAG,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC;QAEvC,OAAO,KAAK,CAAC,MAAM,CAAC,UAAA,IAAI;YACtB,IAAI,IAAI,GAAG,KAAK,CAAC;YACjB,IAAI,IAAI,CAAC,IAAI,EAAE;gBACb,IAAI,GAAG,IAAI,IAAI,KAAI,CAAC,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,QAAQ,CAAC,WAAW,CAAC,CAAC;aAC5D;YACD,IAAI,IAAI,CAAC,EAAE,EAAE;gBACX,IAAI,GAAG,IAAI,IAAI,KAAI,CAAC,KAAK,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,QAAQ,CAAC,WAAW,CAAC,CAAC;aAC1D;YACD,IAAI,IAAI,CAAC,MAAM,EAAE;gBACf,IAAI,GAAG,IAAI,IAAI,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,UAAA,KAAK,IAAI,OAAA,KAAI,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC,QAAQ,CAAC,WAAW,CAAC,EAAvC,CAAuC,CAAC,CAAC;aACnF;YACD,IAAI,IAAI,CAAC,OAAO,EAAE;gBAChB,IAAI,GAAG,IAAI,IAAI,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,UAAA,KAAK,IAAI,OAAA,KAAI,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC,QAAQ,CAAC,WAAW,CAAC,EAAvC,CAAuC,CAAC,CAAC;aACpF;YACD,OAAO,IAAI,CAAC;QACd,CAAC,CAAC,CAAC;IACL,CAAC;IAED,8BAAK,GAAL,UAAM,KAAa;QACjB,OAAO,KAAK,CAAC,IAAI,EAAE,CAAC,WAAW,EAAE,CAAC;IACpC,CAAC;IA7BU,cAAc;QAJ1B,WAAI,CAAC;YACJ,IAAI,EAAE,YAAY;SACnB,CAAC;OAEW,cAAc,CA8B1B;IAAD,qBAAC;CAAA,AA9BD,IA8BC;AA9BY,wCAAc","sourcesContent":["import { Pipe, PipeTransform } from '@angular/core';\r\nimport { Icon } from './icon';\r\n\r\n@Pipe({\r\n  name: 'searchIcon'\r\n})\r\n\r\nexport class SearchIconPipe implements PipeTransform {\r\n\r\n  transform(value: Icon[], search: string): any {\r\n    if (!search) {\r\n      return value;\r\n    }\r\n\r\n    const searchValue = this.clean(search);\r\n\r\n    return value.filter(icon => {\r\n      let keep = false;\r\n      if (icon.name) {\r\n        keep = keep || this.clean(icon.name).includes(searchValue);\r\n      }\r\n      if (icon.id) {\r\n        keep = keep || this.clean(icon.id).includes(searchValue);\r\n      }\r\n      if (icon.filter) {\r\n        keep = keep || icon.filter.some(value => this.clean(value).includes(searchValue));\r\n      }\r\n      if (icon.aliases) {\r\n        keep = keep || icon.aliases.some(value => this.clean(value).includes(searchValue));\r\n      }\r\n      return keep;\r\n    });\r\n  }\r\n\r\n  clean(value: string): string {\r\n    return value.trim().toLowerCase();\r\n  }\r\n}\r\n"]}