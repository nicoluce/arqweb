{"version":3,"file":"icon-picker.directive.js","sourceRoot":"","sources":["../../src/lib/icon-picker.directive.ts"],"names":[],"mappings":"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","sourcesContent":["import {\r\n  OnInit, OnChanges, Directive, Input, Output, EventEmitter, ElementRef, ViewContainerRef, ReflectiveInjector, ComponentFactoryResolver\r\n} from '@angular/core';\r\n\r\nimport { IconPickerComponent } from './icon-picker.component';\r\n\r\n@Directive({\r\n  selector: '[iconPicker]',\r\n  host    : {\r\n    '(click)': 'onClick()'\r\n  }\r\n})\r\nexport class IconPickerDirective implements OnInit, OnChanges {\r\n  @Input('iconPicker') iconPicker: string;\r\n  @Input('ipPlaceHolder') ipPlaceHolder = 'Search icon...';\r\n  @Input('ipPosition') ipPosition = 'right';\r\n  @Input('ipFallbackIcon') ipFallbackIcon = 'fas fa-user';\r\n  @Input('ipHeight') ipHeight = 'auto';\r\n  @Input('ipMaxHeight') ipMaxHeight = '200px';\r\n  @Input('ipWidth') ipWidth = '230px';\r\n  @Input('ipIconPack') ipIconPack = ['bs', 'fa5'];\r\n\r\n  @Output('iconPickerSelect') iconPickerSelect = new EventEmitter<string>(true);\r\n\r\n  private dialog: any;\r\n  private created: boolean;\r\n  private ignoreChanges = false;\r\n\r\n  constructor(\r\n    private vcRef: ViewContainerRef,\r\n    private el: ElementRef,\r\n    private cfr: ComponentFactoryResolver) {\r\n    this.created = false;\r\n  }\r\n\r\n  ngOnChanges(changes: any): void {\r\n    if (changes.iconPicker) {\r\n      this.ignoreChanges = false;\r\n    }\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.iconPicker = this.iconPicker || this.ipFallbackIcon || 'fa fa-user-plus';\r\n    this.iconPickerSelect.emit(this.iconPicker);\r\n  }\r\n\r\n  onClick() {\r\n    this.openDialog();\r\n  }\r\n\r\n  openDialog() {\r\n    if (!this.created) {\r\n      this.created = true;\r\n      let vcRef = this.vcRef;\r\n      const compFactory = this.cfr.resolveComponentFactory(IconPickerComponent);\r\n      const injector = ReflectiveInjector.fromResolvedProviders([], vcRef.parentInjector);\r\n      const cmpRef = vcRef.createComponent(compFactory, 0, injector, []);\r\n      cmpRef.instance.setDialog(this, this.el, this.iconPicker, this.ipPosition, this.ipHeight, this.ipMaxHeight,\r\n        this.ipWidth, this.ipPlaceHolder, this.ipFallbackIcon, this.ipIconPack);\r\n      this.dialog = cmpRef.instance;\r\n\r\n      if (this.vcRef !== vcRef) {\r\n        cmpRef.changeDetectorRef.detectChanges();\r\n      }\r\n    } else if (this.dialog) {\r\n      this.dialog.openDialog(this.iconPicker);\r\n    }\r\n  }\r\n\r\n  iconSelected(icon: string) {\r\n    this.iconPickerSelect.emit(icon);\r\n  }\r\n\r\n}\r\n"]}