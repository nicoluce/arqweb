// Code generated by MockGen. DO NOT EDIT.
// Source: poi_storage.go

// Package mock is a generated GoMock package.
package mock

import (
	domain "github.com/nicoluce/arqweb/src/api/domain"
	gomock "github.com/golang/mock/gomock"
	go_geojson "github.com/paulmach/go.geojson"
	primitive "go.mongodb.org/mongo-driver/bson/primitive"
	reflect "reflect"
)

// MockPOIStorage is a mock of POIStorage interface
type MockPOIStorage struct {
	ctrl     *gomock.Controller
	recorder *MockPOIStorageMockRecorder
}

// MockPOIStorageMockRecorder is the mock recorder for MockPOIStorage
type MockPOIStorageMockRecorder struct {
	mock *MockPOIStorage
}

// NewMockPOIStorage creates a new mock instance
func NewMockPOIStorage(ctrl *gomock.Controller) *MockPOIStorage {
	mock := &MockPOIStorage{ctrl: ctrl}
	mock.recorder = &MockPOIStorageMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockPOIStorage) EXPECT() *MockPOIStorageMockRecorder {
	return m.recorder
}

// SavePOI mocks base method
func (m *MockPOIStorage) SavePOI(POI *domain.PointOfInterest) (*domain.PointOfInterest, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "SavePOI", POI)
	ret0, _ := ret[0].(*domain.PointOfInterest)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// SavePOI indicates an expected call of SavePOI
func (mr *MockPOIStorageMockRecorder) SavePOI(POI interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "SavePOI", reflect.TypeOf((*MockPOIStorage)(nil).SavePOI), POI)
}

// EditPOI mocks base method
func (m *MockPOIStorage) EditPOI(poiID primitive.ObjectID, newVersionPOI *domain.PointOfInterest) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "EditPOI", poiID, newVersionPOI)
	ret0, _ := ret[0].(error)
	return ret0
}

// EditPOI indicates an expected call of EditPOI
func (mr *MockPOIStorageMockRecorder) EditPOI(poiID, newVersionPOI interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "EditPOI", reflect.TypeOf((*MockPOIStorage)(nil).EditPOI), poiID, newVersionPOI)
}

// SaveFeature mocks base method
func (m *MockPOIStorage) SaveFeature(feature *go_geojson.Feature) (*domain.PointOfInterest, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "SaveFeature", feature)
	ret0, _ := ret[0].(*domain.PointOfInterest)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// SaveFeature indicates an expected call of SaveFeature
func (mr *MockPOIStorageMockRecorder) SaveFeature(feature interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "SaveFeature", reflect.TypeOf((*MockPOIStorage)(nil).SaveFeature), feature)
}

// SearchPOI mocks base method
func (m *MockPOIStorage) SearchPOI(filters *domain.POIFilter) ([]*domain.PointOfInterest, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "SearchPOI", filters)
	ret0, _ := ret[0].([]*domain.PointOfInterest)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// SearchPOI indicates an expected call of SearchPOI
func (mr *MockPOIStorageMockRecorder) SearchPOI(filters interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "SearchPOI", reflect.TypeOf((*MockPOIStorage)(nil).SearchPOI), filters)
}
